#!/bin/bash

openssl_exe="/usr/bin/openssl"
server="docs"
#clients=(pan fitzroy foster beatrice kerr popper)
clients=(pan fitzroy)
strength=4096
length=365

for host in ${server} ${clients[*]}
do
	echo "Generating an RSA key for host \"${host}\" ..."
	${openssl_exe} genrsa -out ${host}.key ${strength}
done

# Make a new root certificate for the server
echo "Generating a root CA certificate for host \"${server}\" ..."
${openssl_exe} req -x509 -new -days ${length} -key ${server}.key -out ${server}.crt

# Make client certificates for the clients
for client in ${clients[*]}
do
	echo "Generating a client certificate for host \"${client}\" ..."
	${openssl_exe} req -new -key ${client}.key -out ${client}.csr
	${openssl_exe} x509 -req -days ${length} -in ${client}.csr -CA ${server}.crt -CAkey ${server}.key -CAcreateserial -out ${client}.crt
done

for host in ${server} ${clients[*]}
do
	echo "Generating a certificate bundle for host \"${host}\" ..."
	${openssl_exe} pkcs12 -export -clcerts -in ${host}.crt -inkey ${host}.key -out ${host}.p12
	${openssl_exe} pkcs12         -clcerts -in ${host}.p12                    -out ${host}.pem
done

echo ""
echo "New certificates for the documentation workflow have been generated."
echo "To deploy them, please do the following:"
echo ""
echo "      * Commit necessary changes to the docgen-server git repo"
echo "      * Commit the *.pem files to the docgen-client git repo and check"
echo "        it out for uploaders"
echo "      * Ensure that each uploader has a copy of the *.key file"
echo "        appropriate to that particular cluster"
echo ""
echo ""
